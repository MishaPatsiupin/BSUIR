# Лабораторная работа №3. Взаимодействие и синхронизация процессов

## Описание задания
Написать две программы - "parent" и "child", которые взаимодействуют и синхронизируются с помощью сигналов SIGUSR1 и SIGUSR2.

## Основные действия родительского процесса (P):
1. По нажатию клавиши "+" порождает дочерний процесс (C_k) и сообщает об этом.
2. По нажатию клавиши "-" удаляет последний порожденный C_k, сообщает об этом и о количестве оставшихся.
3. При вводе символа "l" выводит перечень родительских и дочерних процессов.
4. При вводе символа "k" удаляет все C_k и сообщает об этом.
5. При вводе символа "s" запрещает всем C_k выводить статистику.
6. При вводе символа "g" разрешает всем C_k выводить статистику.
7. При вводе символов "s<num>" запрещает C_<num> выводить статистику.
8. При вводе символов "g<num>" разрешает C_<num> выводить статистику.
9. При вводе символов "p<num>" запрещает всем C_k вывод и запрашивает C_<num> вывести свою статистику. По истечению заданного времени (5 с), если не введен символ "g", разрешает всем C_k снова выводить статистику.
10. По нажатию клавиши "q" удаляет все C_k, сообщает об этом и завершается.

## Основные действия дочернего процесса (C_k):
1. Во внешнем цикле заводит будильник (nanosleep(2)) и входит в вечный цикл.
2. В вечном цикле заполняет структуру, содержащую пару переменных типа int, значениями {0, 0} и {1, 1} в режиме чередования. Поскольку заполнение не атомарно, в момент срабатывания будильника возможно нарушение этого режима.
3. По получению сигнала SIGUSR1 от P выводит накопленную статистику, а по получению сигнала SIGUSR2 прекращает вывод статистики.

## Технические требования
- Использование системных вызовов и сигналов UNIX.
- Использование структур для хранения статистики.
- Использование таймера (nanosleep(2)) для организации вывода статистики.
- Вывод информации о процессах в удобном для чтения формате.
