## Лабораторная работа No 2. Понятие процессов.
### Описание задания
Необходимо разработать две программы - "parent" и "child".

Перед запуском программы "parent" в окружении создается переменная среды CHILD_PATH с именем каталога, где находится программа "child".

Родительский процесс (программа "parent") после запуска:

- Получает переменные среды, сортирует их в соответствии с LC_COLLATE=C и выводит в stdout.
- Входит в цикл обработки нажатий клавиатуры.
- Возможные действия в цикле:

- - Символ "+" порождает дочерний процесс, используя fork(2) и execve(2), и запускает в нем очередной экземпляр программы "child". Информацию о каталоге, где размещается "child", получает из окружения, используя getenv(). Имя программы (argv[0]) устанавливается как "child_XX", где XX - порядковый номер от 00 до 99, инкрементируемый родителем.
- - Символ "*" порождает дочерний процесс аналогично предыдущему случаю, но информацию о расположении программы "child" получает, сканируя массив параметров среды, переданный в третьем параметре функции main().
- - Символ "&" порождает дочерний процесс аналогично предыдущим случаям, но информацию о расположении программы "child" получает, сканируя массив параметров среды, указанный во внешней переменной extern char **environ, установленной хост-средой при запуске.
- - При запуске дочернего процесса ему передается сокращенное окружение, включающее набор переменных, указанных в файле, который передается родителем.

### Структура работы

- Реализация программы "parent".
- Реализация программы "child".
- Тестирование и отладка.
### Требования
- Использование системных вызовов fork(), execve(), getpid(), getppid(), getenv().
